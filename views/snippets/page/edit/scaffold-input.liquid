{% for item in items %}
{% liquid
  #item maybe string or blueprint input object
    assign name = item.name | default: item
    assign input_type = item.type | default: inputs[name] | default: "text/basic"
    # compatible to input_type without subtype
    unless input_type contains "/"
      assign input_type = input_type | append : "/basic"
    endunless

    assign selector = prefix | append: key | append : name
    assign placeholder = placeholders[name] | strip_html
%}
{% if expandable %}
<div class="min-h-8 mb-4">
  <input type="checkbox" class="peer hidden" data-state-store="true" checked="checked" id="toggle-{{ selector }}"/>
  <label class="cursor-pointer peer-checked:w-0 peer-checked:px-0 transition-[width] w-auto absolute overflow-hidden inline-block cursor-pointer select-none font-bold text-white bg-gray-400 ps-[24px] md:ps-[55px] pe-6 py-1" for="toggle-{{ selector }}">{{ name | capitalize }}</label>

  <div class="hidden peer-checked:flex">
    {% render "side-toggle", selector: selector, color: "gray-400", hover_color: "highlight" %}
    <div class="{{ row_wrapper_class | default: "w-full" }} me-[24px] md:me-[55px]">
      {% render 'page/edit/field-row', type: input_type, label: name, selector: selector, value: values[name], placeholder: placeholder, icon: icon, form: form %}
    </div>
  </div>
</div>
{% else %}
<div class="{{ row_wrapper_class | default: "w-full" }}">
  {% render 'page/edit/field-row', type: input_type, label: name, selector: selector, value: values[name], placeholder: placeholder, icon: icon, form: form %}
</div>
{% endif %}
{% endfor %}